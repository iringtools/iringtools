<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileAssociation</name>
    </assembly>
    <members>
        <member name="T:BrendanGrant.Helpers.FileAssociation.AssociationManager">
            <summary>
            Provides more streamlined interface for associating a single or multiple extensions with a single program.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.AssociationManager.CheckAssociation(System.String,System.String[])">
            <summary>
            Determines of the list of extensions are associated with the specified program id.
            </summary>
            <param name="progId">Program id to check against.</param>
            <param name="extensions">String array of extensions to check against the program id.</param>
            <returns>String array of extensions that were not associated with the program id.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.AssociationManager.Associate(System.String,System.String,System.String[])">
            <summary>
            Associates a single executable with a list of extensions.
            </summary>
            <param name="progId">Name of program id</param>
            <param name="executablePath">Path to executable to start including arguments.</param>
            <param name="extensions">String array of extensions to associate with program id.</param>
            <example>progId = "MyTextFile"
            executablePath = "notepad.exe %1"
            extensions = ".txt", ".text"</example>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.AssociationManager.Associate(System.String,System.String[])">
            <summary>
            Associates an already existing program id with a list of extensions.
            </summary>
            <param name="progId">The program id to associate extensions with.</param>
            <param name="extensions">String array of extensions to associate with program id.</param>
        </member>
        <member name="T:BrendanGrant.Helpers.FileAssociation.RegistryWrapper">
            <summary>
            Provides a streamlined interface for reading and writing to the registry.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.RegistryWrapper.Read(System.String,System.String)">
            <summary>
            Reads specified value from the registry.
            </summary>
            <param name="path">Full registry key (minus root) that contains value.</param>
            <param name="valueName">Name of the value within key that will be read.</param>
            <returns>Read value.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.RegistryWrapper.Write(System.String,System.String,System.Object)">
            <summary>
            Writes specified value to the registry.
            </summary>
            <param name="path">Full registry key (minus root) that will contain the value.</param>
            <param name="valueName">Name of the value within key that will be written.</param>
            <param name="value">Value to be written</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.RegistryWrapper.Delete(System.String,System.String)">
            <summary>
            Deletes specified value;
            </summary>
            <param name="path">Full registry key (minus root) that contains the value to be deleted.</param>
            <param name="valueName">Name of value to be deleted</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ShellNotification.SHChangeNotify(System.UInt32,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Notifies the system of an event that an application has performed. An application should use this function if it performs an action that may affect the Shell. 
            </summary>
            <param name="wEventId">Describes the event that has occurred. The ShellChangeNotificationEvents enum contains a list of options.</param>
            <param name="uFlags">Flags that indicate the meaning of the dwItem1 and dwItem2 parameters.</param>
            <param name="dwItem1">First event-dependent value.</param>
            <param name="dwItem2">Second event-dependent value.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ShellNotification.NotifyOfChange">
            <summary>
            Notify shell of change of file associations.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_RENAMEITEM">
            <summary>
            The name of a nonfolder item has changed. SHCNF_IDLIST or  SHCNF_PATH must be specified in uFlags. dwItem1 contains the  previous PIDL or name of the item. dwItem2 contains the new PIDL or name of the item. 
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_CREATE">
            <summary>
            A nonfolder item has been created. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the item that was created. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_DELETE">
            <summary>
            A nonfolder item has been deleted. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the item that was deleted. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_MKDIR">
            <summary>
            A folder has been created. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that was created. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_RMDIR">
            <summary>
            A folder has been removed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that was removed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_MEDIAINSERTED">
            <summary>
            Storage media has been inserted into a drive. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive that contains the new media. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_MEDIAREMOVED">
            <summary>
            Storage media has been removed from a drive. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive from which the media was removed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_DRIVEREMOVED">
            <summary>
            A drive has been removed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive that was removed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_DRIVEADD">
            <summary>
            A drive has been added. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive that was added. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_NETSHARE">
            <summary>
            A folder on the local computer is being shared via the network. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that is being shared. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_NETUNSHARE">
            <summary>
            A folder on the local computer is no longer being shared via the network. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that is no longer being shared. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_ATTRIBUTES">
            <summary>
            The attributes of an item or folder have changed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the item or folder that has changed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_UPDATEDIR">
            <summary>
            The contents of an existing folder have changed, but the folder still exists and has not been renamed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the folder that has changed. dwItem2 is not used and should be NULL. If a folder has been created, deleted, or renamed, use SHCNE_MKDIR, SHCNE_RMDIR, or SHCNE_RENAMEFOLDER, respectively, instead.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_UPDATEITEM">
            <summary>
            An existing nonfolder item has changed, but the item still exists and has not been renamed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the item that has changed. dwItem2 is not used and should be NULL. If a nonfolder item has been created, deleted, or renamed, use SHCNE_CREATE, SHCNE_DELETE, or SHCNE_RENAMEITEM, respectively, instead.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_SERVERDISCONNECT">
            <summary>
            The computer has disconnected from a server. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the server from which the computer was disconnected. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_UPDATEIMAGE">
            <summary>
            An image in the system image list has changed. SHCNF_DWORD must be specified in uFlags. dwItem1 contains the index in the system image list that has changed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_DRIVEADDGUI">
            <summary>
            A drive has been added and the Shell should create a new window for the drive. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive that was added. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_RENAMEFOLDER">
            <summary>
            The name of a folder has changed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the previous pointer to an item identifier list (PIDL) or name of the folder. dwItem2 contains the new PIDL or name of the folder.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_FREESPACE">
            <summary>
            The amount of free space on a drive has changed. SHCNF_IDLIST or SHCNF_PATH must be specified in uFlags. dwItem1 contains the root of the drive on which the free space changed. dwItem2 is not used and should be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_EXTENDED_EVENT">
            <summary>
            Not currently used.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_ASSOCCHANGED">
            <summary>
            A file type association has changed. SHCNF_IDLIST must be specified in the uFlags parameter. dwItem1 and dwItem2 are not used and must be NULL.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_DISKEVENTS">
            <summary>
            Specifies a combination of all of the disk event identifiers.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_GLOBALEVENTS">
            <summary>
            Specifies a combination of all of the global event identifiers. 
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_ALLEVENTS">
            <summary>
            All events have occurred.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationEvents.SHCNE_INTERRUPT">
            <summary>
            The specified event occurred as a result of a system interrupt. As this value modifies other event values, it cannot be used alone.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_IDLIST">
            <summary>
            dwItem1 and dwItem2 are the addresses of ITEMIDLIST structures that represent the item(s) affected by the change. Each ITEMIDLIST must be relative to the desktop folder. 
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_PATHA">
            <summary>
            dwItem1 and dwItem2 are the addresses of null-terminated strings of maximum length MAX_PATH that contain the full path names of the items affected by the change.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_PRINTERA">
            <summary>
            dwItem1 and dwItem2 are the addresses of null-terminated strings that represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_DWORD">
            <summary>
            The dwItem1 and dwItem2 parameters are DWORD values.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_PATHW">
            <summary>
            like SHCNF_PATHA but unicode string
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_PRINTERW">
            <summary>
            like SHCNF_PRINTERA but unicode string
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_FLUSH">
            <summary>
            The function should not return until the notification has been delivered to all affected components. As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ShellNotification.ShellChangeNotificationFlags.SHCNF_FLUSHNOWAIT">
            <summary>
            The function should begin delivering notifications to all affected components but should return as soon as the notification process has begun. As this flag modifies other data-type flags, it cannot by used  by itself.
            </summary>
        </member>
        <member name="T:BrendanGrant.Helpers.FileAssociation.PerceivedTypes">
            <summary>
            Broad categories of system recognized file format types.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.PerceivedTypes.None">
            <summary>
            No 
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.PerceivedTypes.Image">
            <summary>
            Image file
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.PerceivedTypes.Text">
            <summary>
            Text file
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.PerceivedTypes.Audio">
            <summary>
            Audio file
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.PerceivedTypes.Video">
            <summary>
            Video file
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.PerceivedTypes.Compressed">
            <summary>
            Compressed file
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.PerceivedTypes.System">
            <summary>
            System file
            </summary>
        </member>
        <member name="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo">
            <summary>
            Provides instance methods for the creation, modification, and deletion of file extension associations in the Windows registry.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.GetExtensions">
            <summary>
            Gets array containing known file extensions from HKEY_CLASSES_ROOT.
            </summary>
            <returns>String array containing extensions.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Create">
            <summary>
            Creates the extension key.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Delete">
            <summary>
            Deletes the extension key.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.IsValid(System.String,System.String)">
            <summary>
            Verifies that given extension exists and is associated with given program id
            </summary>
            <param name="extension">Extension to be checked for.</param>
            <param name="progId">progId to be checked for.</param>
            <returns>True if association exists, false if it does not.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/>FileAssociationInfo class, which acts as a wrapper for a file extension within the registry.
            </summary>
            <param name="extension">The dot prefixed extension.</param>
            <example>FileAssociationInfo(".mp3")
            FileAssociationInfo(".txt")
            FileAssociationInfo(".doc")</example>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Create(System.String)">
            <summary>
            Creates actual extension association key in registry for the specified extension and supplied attributes.
            </summary>
            <param name="progId">Name of expected handling program.</param>
            <returns>FileAssociationInfo instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Create(System.String,BrendanGrant.Helpers.FileAssociation.PerceivedTypes)">
            <summary>
            Creates actual extension association key in registry for the specified extension and supplied attributes.
            </summary>
            <param name="progId">Name of expected handling program.</param>
            <param name="perceivedType"><see cref="T:BrendanGrant.Helpers.FileAssociation.PerceivedTypes"/>PerceivedType of file type.</param>
            <returns>FileAssociationInfo instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Create(System.String,BrendanGrant.Helpers.FileAssociation.PerceivedTypes,System.String)">
            <summary>
            Creates actual extension association key in registry for the specified extension and supplied attributes.
            </summary>
            <param name="progId">Name of expected handling program.</param>
            <param name="perceivedType"><see cref="T:BrendanGrant.Helpers.FileAssociation.PerceivedTypes"/>PerceivedType of file type.</param>
            <param name="contentType">MIME type of file type.</param>
            <returns>FileAssociationInfo instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Create(System.String,BrendanGrant.Helpers.FileAssociation.PerceivedTypes,System.String,System.String[])">
            <summary>
            Creates actual extension association key in registry for the specified extension and supplied attributes.
            </summary>
            <param name="progId">Name of expected handling program.</param>
            <param name="perceivedType"><see cref="T:BrendanGrant.Helpers.FileAssociation.PerceivedTypes"/>PerceivedType of file type.</param>
            <param name="contentType">MIME type of file type.</param>
            <param name="openwithList"></param>
            <returns>FileAssociationInfo instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.GetOpenWithList(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo)">
            <summary>
            Gets array of containing program file names which should be displayed in the Open With List.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <returns>Program file names</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.SetOpenWithList(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo,System.String[])">
            <summary>
            Sets array of containing program file names which should be displayed in the Open With List.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <param name="programList">Program file names</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.GetPerceivedType(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo)">
            <summary>
            Gets or value that determines the <see cref="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.PerceivedType"/>PerceivedType of the file.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <returns><see cref="T:BrendanGrant.Helpers.FileAssociation.PerceivedTypes"/> that specifies Perceived Type of extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.SetPerceivedType(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo,BrendanGrant.Helpers.FileAssociation.PerceivedTypes)">
            <summary>
            Sets a value that determines the <see cref="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.PerceivedType"/>PerceivedType of the file.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <param name="type"><see cref="T:BrendanGrant.Helpers.FileAssociation.PerceivedTypes"/> to be set that specifies Perceived Type of extension.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.GetPersistentHandler(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo)">
            <summary>
            Gets a value that indicates the filter component that is used to search for text within documents of this type.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <returns>Guid of filter component.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.SetPersistentHandler(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo,System.Guid)">
            <summary>
            Sets a value that indicates the filter component that is used to search for text within documents of this type.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <param name="persistentHandler">Guid of filter component.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.GetContentType(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo)">
            <summary>
            Gets a value that determines the MIME type of the file.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <returns>MIME content type of extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.SetContentType(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo,System.String)">
            <summary>
            Sets a value that determines the MIME type of the file.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <param name="type">MIME content type of extension.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.GetProgID(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo)">
            <summary>
            Gets a value that indicates the name of the associated application with the behavior to handle this extension.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <returns>Associated Program ID of handling program.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.SetProgID(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo,System.String)">
            <summary>
            Set a value that indicates the name of the associated application with the behavior to handle this extension.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> that provides specifics of the extension to be changed.</param>
            <param name="progId">Associated Program ID of handling program.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Create(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo)">
            <summary>
            Creates actual file extension entry in registry.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> instance that contains specifics on extension to be created.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Delete(BrendanGrant.Helpers.FileAssociation.FileAssociationInfo)">
            <summary>
            Deletes actual file extension entry in registry.
            </summary>
            <param name="file"><see cref="T:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo"/> instance that contains specifics on extension to be deleted.</param>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.ContentType">
            <summary>
            Gets or sets a value that determines the MIME type of the file.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Exists">
            <summary>
            Gets a value indicating whether the extension exists.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.Extension">
            <summary>
            Gets the name of the extension.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.OpenWithList">
            <summary>
            Gets or sets array of containing program file names which should be displayed in the Open With List.
            </summary>
            <example>notepad.exe, wordpad.exe, othertexteditor.exe</example>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.PerceivedType">
            <summary>
            Gets or sets a value that determines the <see cref="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.PerceivedType"/> of the file.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.PersistentHandler">
            <summary>
            Gets or sets a value that indicates the filter component that is used to search for text within documents of this type.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.FileAssociationInfo.ProgID">
            <summary>
            Gets or set a value that indicates the name of the associated application with the behavior to handle this extension.
            </summary>
        </member>
        <member name="T:BrendanGrant.Helpers.FileAssociation.ProgramIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ProgramIcon.None">
            <summary>
            Represents and empty or nonexistent Program Icon
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.#ctor(System.String,System.Int32)">
            <summary>
            Creates instance of ProgramIcon.
            </summary>
            <param name="path">Filename of file containing icon.</param>
            <param name="index">Index of icon within the file.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.#ctor(System.String)">
            <summary>
            Creates instance of ProgramIcon.
            </summary>
            <param name="path">Filename of file containing icon.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.#ctor">
            <summary>
            Creates instance of ProgramIcon.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.ToString">
            <summary>
            Returns string representation of current ProgramIcon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.Parse(System.String)">
            <summary>
            Parses string to create and instance of ProgramIcon.
            </summary>
            <param name="regString">String specifying file path. Icon can be included as well.</param>
            <returns>ProgramIcon based on input string.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.op_Equality(BrendanGrant.Helpers.FileAssociation.ProgramIcon,BrendanGrant.Helpers.FileAssociation.ProgramIcon)">
            <summary>
            
            </summary>
            <param name="lv"></param>
            <param name="rv"></param>
            <returns></returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.op_Inequality(BrendanGrant.Helpers.FileAssociation.ProgramIcon,BrendanGrant.Helpers.FileAssociation.ProgramIcon)">
            <summary>
            
            </summary>
            <param name="lv"></param>
            <param name="rv"></param>
            <returns></returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">The System.Object to compare with the current System.Object.</param>
            <returns>true if the specified System.Object is equal to the current System.Object; otherwise, false.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramIcon.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current System.Object.</returns>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramIcon.Index">
            <summary>
            Gets or sets value that specifies icons index within a file.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramIcon.Path">
            <summary>
            Gets or sets a value that specifies the file containing the icon.
            </summary>
        </member>
        <member name="T:BrendanGrant.Helpers.FileAssociation.EditFlags">
            <summary>
            Specifies values that control some aspects of the Shell's handling of the file types linked to a ProgID.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.None">
            <summary>
            No flags exist
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.Exclude">
            <summary>
            Exclude the file class.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.Show">
            <summary>
            Show file classes, such as folders, that aren't associated with a file name extension.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.HasExtension">
            <summary>
            The file class has a file name extension.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoEdit">
            <summary>
            The registry entries associated with this file class cannot be edited. New entries cannot be added and existing entries cannot be modified or deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoRemove">
            <summary>
            The registry entries associated with this file class cannot be deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoNewVerb">
            <summary>
            No new verbs can be added to the file class.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoEditVerb">
            <summary>
            Canonical verbs such as open and print cannot be modified or deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoRemoveVerb">
            <summary>
            Canonical verbs such as open and print cannot be deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoEditDesc">
            <summary>
            The description of the file class cannot be modified or deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoEditIcon">
            <summary>
            The icon assigned to the file class cannot be modified or deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoEditDflt">
            <summary>
            The default verb cannot be modified.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoEditVerbCmd">
            <summary>
            The commands associated with verbs cannot be modified.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoEditVerbExe">
            <summary>
            Verbs cannot be modified or deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoDDE">
            <summary>
            The Dynamic Data Exchange (DDE)-related entries cannot be modified or deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoEditMIME">
            <summary>
            The content-type and default-extension entries cannot be modified or deleted.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.OpenIsSafe">
            <summary>
            The file class's open verb can be safely invoked for downloaded files. Note that this flag may create a security risk, because downloaded files could contain malicious content. To reduce this risk, consider methods to scan downloaded files before opening.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.AlwaysUnsafe">
            <summary>
            Do not allow the Never ask me check box to be enabled. The user can override this attribute through the File Type dialog box. This flag also affects ShellExecute, download dialogs, and any application making use of the AssocIsDangerous function.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.AlwaysShowExtension">
            <summary>
            Always show the file class's file name extension, even if the user has selected the Hide Extensions option.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.EditFlags.NoRecentDocuments">
            <summary>
            Don't add members of this file class to the Recent Documents folder.
            </summary>
        </member>
        <member name="T:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo">
            <summary>
            Provides instance of ProgramaticID that can be referenced by multiple different extensions.
            </summary>
        </member>
        <member name="F:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.progId">
            <summary>
            Actual name of Programmatic Identifier
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Create">
            <summary>
            Creates program id within registry.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Create(BrendanGrant.Helpers.FileAssociation.ProgramVerb)">
            <summary>
            Creates actual Programmatic Identifier key in registry that is used by other extensions.
            </summary>
            <param name="verb">Single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verb.</param>
            <returns><see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo"/> instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Create(BrendanGrant.Helpers.FileAssociation.ProgramVerb[])">
            <summary>
            Creates actual Programmatic Identifier key in registry that is used by other extensions.
            </summary>
            <param name="verbs">Array of <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verbs.</param>
            <returns><see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo"/> instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Create(System.String,BrendanGrant.Helpers.FileAssociation.ProgramVerb)">
            <summary>
            Creates actual Programmatic Identifier key in registry that is used by other extensions.
            </summary>
            <param name="description">Friendly description of file type.</param>
            <param name="verb">Single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verbs.</param>
            <returns><see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo"/> instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Create(System.String,BrendanGrant.Helpers.FileAssociation.ProgramVerb[])">
            <summary>
            Creates actual Programmatic Identifier key in registry that is used by other extensions.
            </summary>
            <param name="description">Friendly description of file type.</param>
            <param name="verbs">Array of <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verbs.</param>
            <returns><see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo"/> instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Create(System.String,BrendanGrant.Helpers.FileAssociation.EditFlags,BrendanGrant.Helpers.FileAssociation.ProgramVerb)">
            <summary>
            Creates actual Programmatic Identifier key in registry that is used by other extensions.
            </summary>
            <param name="description">Friendly description of file type.</param>
            <param name="editFlags"><see cref="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.EditFlags"/> for program file type.</param>
            <param name="verb">Single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verbs.</param>
            <returns><see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo"/> instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Create(System.String,BrendanGrant.Helpers.FileAssociation.EditFlags,BrendanGrant.Helpers.FileAssociation.ProgramVerb[])">
            <summary>
            Creates actual Programmatic Identifier key in registry that is used by other extensions.
            </summary>
            <param name="description">Friendly description of file type.</param>
            <param name="editFlags"><see cref="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.EditFlags"/> for program file type.</param>
            <param name="verbs">Array of <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verbs.</param>
            <returns><see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo"/> instance referring to specified extension.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.GetAlwaysShowExt">
            <summary>
            Gets a value that determines if the file's extension will always be displayed.
            </summary>
            <returns>Value that specifies if the file's extension is always displayed.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.SetAlwaysShowExt(System.Boolean)">
            <summary>
            Sets a value that determines if the file's extension will always be shown.
            </summary>
            <param name="value">Value that specifies if the file's extension should be always displayed.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.GetDescription">
            <summary>
            Gets a value that determines what the friendly name of the file is.
            </summary>
            <returns>Friendly description of file type.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.SetDescription(System.String)">
            <summary>
            Sets a value that determines what the friendly name of the file is.
            </summary>
            <param name="description">Friendly description of file type.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.GetEditFlags">
            <summary>
            Gets a value that determines numerous shell options for extension as well as limitations on how extension properties can be edited by programs that honor <see cref="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.EditFlags"/>
            </summary>
            <returns><see cref="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.EditFlags"/> for program file type.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.SetEditFlags(BrendanGrant.Helpers.FileAssociation.EditFlags)">
            <summary>
            Sets a value that determines numerous shell options for extension as well as limitations on how extension properties can be edited by programs that honor <see cref="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.EditFlags"/>
            </summary>
            <param name="flags"><see cref="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.EditFlags"/> for program file type.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.GetDefaultIcon">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.SetDefaultIcon(BrendanGrant.Helpers.FileAssociation.ProgramIcon)">
            <summary>
            
            </summary>
            <param name="icon"></param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.GetVerbs">
            <summary>
            Gets an array of <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that define the verbs supported by this ProgID.
            </summary>
            <returns>Array of <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verbs.</returns>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.SetVerbs(BrendanGrant.Helpers.FileAssociation.ProgramVerb[])">
            <summary>
            Sets an array of <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that define the verbs supported by this ProgID
            </summary>
            <param name="verbs">Array of <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains verbs to be set.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.AddVerbInternal(BrendanGrant.Helpers.FileAssociation.ProgramVerb)">
            <summary>
            Adds single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that define the verb supported by this ProgID.
            </summary>
            <param name="verb">Single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verb.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.RemoveVerbInternal(System.String)">
            <summary>
            Removes single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that define the verb supported by this ProgID.
            </summary>
            <param name="name">Name of verb to remove</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Delete">
            <summary>
            Deletes the current prog id.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.AddVerb(BrendanGrant.Helpers.FileAssociation.ProgramVerb)">
            <summary>
            Adds single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that define the verb supported by this ProgID.
            </summary>
            <param name="verb">Single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verb.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.RemoveVerb(BrendanGrant.Helpers.FileAssociation.ProgramVerb)">
            <summary>
            Removes single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that define the verb supported by this ProgID.
            </summary>
            <param name="verb">Single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that contains supported verb.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.RemoveVerb(System.String)">
            <summary>
            Removes single <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that define the verb supported by this ProgID.
            </summary>
            <param name="name">Name of verb to remove.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo"/> class, which acts as a wrapper for a Programmatic Identifier within the registry.
            </summary>
            <param name="progId">Name of program id to interface with.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.TryGetInt(System.Byte[],System.Int32@)">
            <summary>
            Attempts to convert the value within the input byte array into an integer.
            </summary>
            <param name="arr">Byte array containing number.</param>
            <param name="val">Converted integer if successful.</param>
            <returns>True on success, false on failure.</returns>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.AlwaysShowExtension">
            <summary>
            Gets or sets a value that determines if the file's extension will always be displayed.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Description">
            <summary>
            Gets or sets a value that determines what the friendly name of the file is.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.EditFlags">
            <summary>
            Gets or sets a value that determines numerous shell options for extension as well as limitations on how extension properties can be edited by programs that honor <see cref="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.EditFlags"/>
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.DefaultIcon">
            <summary>
            Gets or sets a value that determines the default icon for the file type.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Verbs">
            <summary>
            Gets or sets an array of <see cref="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb"/> that define the verbs supported by this ProgID
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.ProgID">
            <summary>
            Gets a value that is the name of the Programatic Identifier
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramAssociationInfo.Exists">
            <summary>
            Gets a value that determines of a registry key exists with this Programatic Identifier
            </summary>
        </member>
        <member name="T:BrendanGrant.Helpers.FileAssociation.RegistryException">
            <summary>
            This exception is thrown when there is an error when reading, writing or modifying file assocation info.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.RegistryException.#ctor">
            <summary>
            Initializes a new instance of the RegistryException class.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.RegistryException.#ctor(System.String)">
            <summary>
             Initializes a new instance of the RegistryException class with a specified error message.
            </summary>
            <param name="message">A System.String that describes the error.</param>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.RegistryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ApplicationException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:BrendanGrant.Helpers.FileAssociation.ProgramVerb">
            <summary>
            Provides representation of verb that is used to determine mode file is being opened in. Contained within ProgID.
            </summary>
        </member>
        <member name="M:BrendanGrant.Helpers.FileAssociation.ProgramVerb.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name">Name of verb</param>
            <param name="command">Command-line path to program and arguments of associated program</param>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramVerb.Command">
            <summary>
            Gets a value of the command-line path to the program that is to be called when this command verb is used.
            </summary>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.ProgramVerb.Name">
            <summary>
            Gets the name of the verb representing this command.
            </summary>
            <example>"open"
            "print"</example>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.RegistryHelper.AssociationsRoot">
            <summary>
            Gets the Registry Key which serves as the root for file associations
            </summary>
            <remarks>
            If HKEY_CURRENT_USERS cannot be accessed then the program will attempt to use HKEY_CLASSES_ROOT instead
            </remarks>
        </member>
        <member name="P:BrendanGrant.Helpers.FileAssociation.RegistryHelper.UseCurrentUser">
            <summary>
            Gets/Sets whether HKEY_CURRENT_USER\Software\Classes is used as the root as opposed to HKEY_CLASSES_ROOT
            </summary>
        </member>
    </members>
</doc>

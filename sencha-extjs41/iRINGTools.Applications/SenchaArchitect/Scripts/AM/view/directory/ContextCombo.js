/*
 * File: Scripts/AM/view/directory/ContextCombo.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AM.view.directory.ContextCombo', {
  extend: 'Ext.form.field.ComboBox',
  alias: 'widget.contextcombo',

  name: 'contextCombo',
  fieldLabel: 'Context Name',
  selectOnFocus: false,
  displayField: 'context',
  forceSelection: false,
  hiddenName: 'Context',
  minChars: 100000,
  store: 'ContextStore',
  typeAhead: false,
  valueField: 'context',

  initComponent: function() {
    var me = this;

    Ext.applyIf(me, {
      listeners: {
        select: {
          fn: me.onComboboxSelect,
          scope: me
        },
        change: {
          fn: me.onComboboxChange,
          scope: me
        }
      }
    });

    me.callParent(arguments);
  },

  onComboboxSelect: function(combo, records, options) {
    var me = this;

    var form = me.up('form');
    var record = form.node.record;
    if(records !== null && record !== undefined) {
      record.context = records[0].data.context;
    }

  },

  onComboboxChange: function(field, newValue, oldValue, options) {
    var me = this;
    var frm = me.up('form');

    var record = frm.node.record;
    if (newValue !== undefined && newValue !== '' && record !== undefined) {
      record.Context = newValue;
    }

  }

});
/*
 * File: Scripts/AM/view/mapping/ValueListForm.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AM.view.mapping.ValueListForm', {
  extend: 'Ext.form.Panel',
  alias: 'widget.valuelistform',

  bodyStyle: 'padding:10px 5px 0',
  method: 'POST',
  url: 'mapping/valueList',

  initComponent: function() {
    var me = this;

    me.initialConfig = Ext.apply({
      method: 'POST',
      url: 'mapping/valueList'
    }, me.initialConfig);

    Ext.applyIf(me, {
      defaults: {
        anchor: '100%',
        msgTarget: 'side'
      },
      dockedItems: [
        {
          xtype: 'toolbar',
          dock: 'bottom',
          items: [
            {
              xtype: 'tbfill'
            },
            {
              xtype: 'button',
              handler: function(button, event) {
                me.onSave();
              },
              text: 'Ok'
            },
            {
              xtype: 'button',
              handler: function(button, event) {
                me.onReset();
              },
              text: 'Cancel'
            }
          ]
        }
      ],
      items: [
        {
          xtype: 'hiddenfield',
          name: 'state'
        },
        {
          xtype: 'hiddenfield',
          name: 'oldValueList'
        },
        {
          xtype: 'hiddenfield',
          name: 'contextName'
        },
        {
          xtype: 'hiddenfield',
          name: 'endpoint'
        },
        {
          xtype: 'hiddenfield',
          name: 'baseUrl'
        },
        {
          xtype: 'textfield',
          name: 'valueList',
          fieldLabel: 'Value List Name',
          allowBlank: false
        }
      ]
    });

    me.callParent(arguments);
  },

  onSave: function() {
    var me = this;
    var win = me.up('window');
    var form = me.getForm();
    if (form.findField('valueList').getValue() === '') {
      showDialog(400, 100, 'Warning', 'Please type in a value list name before saving.', Ext.Msg.OK, null);
      return;
    }
    form.submit({
      waitMsg: 'Saving Data...',
      success: function (f, a) {
        win.fireEvent('Save', me);
      },
      failure: function (f, a) {
        var message = 'Error saving changes!';
        showDialog(400, 100, 'Warning', message, Ext.Msg.OK, null);
      }
    });
  },

  onReset: function() {
    var me = this;
    var win = me.up('window');
    win.fireEvent('reset', me);
  }

});